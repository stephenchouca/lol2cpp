#include <string>

#include "token.h"

std::string TokenTypeToString( TokenType type ) {
	switch( type ) {
		case TokenType::YARN:
			return "YARN";
		case TokenType::NUMBR:
			return "NUMBR";
		case TokenType::NUMBAR:
			return "NUMBAR";
		case TokenType::TROOF:
			return "TROOF";
		case TokenType::NOOB:
			return "NOOB";
		case TokenType::YARN_LITERAL:
			return "YARN_LITERAL";
		case TokenType::NUMBR_LITERAL:
			return "NUMBR_LITERAL";
		case TokenType::NUMBAR_LITERAL:
			return "NUMBAR_LITERAL";
		case TokenType::NEGATIVE:
			return "NEGATIVE";
		case TokenType::WIN:
			return "WIN";
		case TokenType::FAIL:
			return "FAIL";
		case TokenType::EXCLAMATION:
			return "EXCLAMATION";
		case TokenType::IDENTIFIER:
			return "IDENTIFIER";
		case TokenType::BTW:
			return "BTW";
		case TokenType::I:
			return "I";
		case TokenType::HAS:
			return "HAS";
		case TokenType::A:
			return "A";
		case TokenType::ITZ:
			return "ITZ";
		case TokenType::OBTW:
			return "OBTW";
		case TokenType::TLDR:
			return "TLDR";
		case TokenType::HAI:
			return "HAI";
		case TokenType::KTHXBYE:
			return "KTHXBYE";
		case TokenType::R:
			return "R";
		case TokenType::MKAY:
			return "MKAY";
		case TokenType::AN:
			return "AN";
		case TokenType::SUM:
			return "SUM";
		case TokenType::DIFF:
			return "DIFF";
		case TokenType::PRODUKT:
			return "PRODUKT";
		case TokenType::QUOSHUNT:
			return "QUOSHUNT";
		case TokenType::MOD:
			return "MOD";
		case TokenType::BIGGR:
			return "BIGGR";
		case TokenType::SMALLR:
			return "SMALLR";
		case TokenType::OF:
			return "OF";
		case TokenType::BOTH:
			return "BOTH";
		case TokenType::EITHER:
			return "EITHER";
		case TokenType::WON:
			return "WON";
		case TokenType::NOT:
			return "NOT";
		case TokenType::ALL:
			return "ALL";
		case TokenType::ANY:
			return "ANY";
		case TokenType::SAEM:
			return "SAEM";
		case TokenType::DIFFRINT:
			return "DIFFRINT";
		case TokenType::IT:
			return "IT";
		case TokenType::SMOOSH:
			return "SMOOSH";
		case TokenType::MAEK:
			return "MAEK";
		case TokenType::IS:
			return "IS";
		case TokenType::NOW:
			return "NOW";
		case TokenType::VISIBLE:
			return "VISIBLE";
		case TokenType::GIMMEH:
			return "GIMMEH";
		case TokenType::O:
			return "O";
		case TokenType::RLY:
			return "RLY";
		case TOkenType::QUESTION:
			return "QUESTION";
		case TokenType::YA:
			return "YA";
		case TokenType::NO:
			return "NO";
		case TokenType::WAI:
			return "WAI";
		case TokenType::OIC:
			return "OIC";
		case TokenType::MEEBE:
			return "MEEBE";
		case TokenType::WTF:
			return "WTF";
		case TokenType::OMG:
			return "OMG";
		case TokenType::GTFO:
			return "GTFO";
		case TokenType::OMGWTF:
			return "OMGWTF";
		case TokenType::IM:
			return "IM";
		case TokenType::IN:
			return "IN";
		case TokenType::OUTTA:
			return "OUTTA";
		case TokenType::YR:
			return "YR";
		case TokenType::TIL:
			return "TIL";
		case TokenType::WILE:
			return "WILE";
		case TokenType::UPPIN:
			return "UPPIN";
		case TokenType::NERFIN:
			return "NERFIN";
		case TokenType::WATCHIN:
			return "WATCHIN";
		case TokenType::HOW:
			return "HOW";
		case TokenType::IZ:
			return "IZ";
		case TokenType::IF:
			return "IF";
		case TokenType::U:
			return "U";
		case TokenType::SAY:
			return "SAY";
		case TokenType::SO:
			return "SO";
		case TokenType::FOUND:
			return "FOUND";
		case TokenType::PLZ:
			return "PLZ";
		case TokenType::NOES:
			return "NOES";
		case TokenType::WELL:
			return "WELL";
		case TokenType::KTHX:
			return "KTHX";
		case TokenType::LINE_DELIMITER:
			return "LINE_DELIMITER";
		case TokenType::END_OF_FILE:
			return "END_OF_FILE";
		default:
			return "";
	}
}

std::ostream &operator <<( std::ostream &out, Token &token ) {
	out << "( " << TokenTypeToString( token.type ) << ", \"" << token.string << "\" )";
	return out;
}
